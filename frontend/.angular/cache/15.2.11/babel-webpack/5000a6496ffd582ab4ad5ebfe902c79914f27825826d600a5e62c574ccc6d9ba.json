{"ast":null,"code":"import { Validators } from '@angular/forms';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../../services/cliente.service\";\nimport * as i2 from \"@angular/forms\";\nimport * as i3 from \"@angular/common\";\nimport * as i4 from \"../../pipes/filtro-cliente.pipe\";\nfunction ClienteComponent_div_5_div_5_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtext(1, \"ID requerido\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction ClienteComponent_div_5_div_9_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtext(1, \"Nombre requerido\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction ClienteComponent_div_5_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r7 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"div\", 7)(1, \"form\", 8);\n    i0.ɵɵlistener(\"ngSubmit\", function ClienteComponent_div_5_Template_form_ngSubmit_1_listener() {\n      i0.ɵɵrestoreView(_r7);\n      const ctx_r6 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r6.submit());\n    });\n    i0.ɵɵelementStart(2, \"label\");\n    i0.ɵɵtext(3, \"ID: \");\n    i0.ɵɵelement(4, \"input\", 9);\n    i0.ɵɵelementEnd();\n    i0.ɵɵtemplate(5, ClienteComponent_div_5_div_5_Template, 2, 0, \"div\", 5);\n    i0.ɵɵelementStart(6, \"label\");\n    i0.ɵɵtext(7, \"Nombre: \");\n    i0.ɵɵelement(8, \"input\", 10);\n    i0.ɵɵelementEnd();\n    i0.ɵɵtemplate(9, ClienteComponent_div_5_div_9_Template, 2, 0, \"div\", 5);\n    i0.ɵɵelementStart(10, \"label\");\n    i0.ɵɵtext(11, \"G\\u00E9nero: \");\n    i0.ɵɵelement(12, \"input\", 11);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(13, \"label\");\n    i0.ɵɵtext(14, \"Edad: \");\n    i0.ɵɵelement(15, \"input\", 12);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(16, \"label\");\n    i0.ɵɵtext(17, \"Identificaci\\u00F3n: \");\n    i0.ɵɵelement(18, \"input\", 13);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(19, \"label\");\n    i0.ɵɵtext(20, \"Direcci\\u00F3n: \");\n    i0.ɵɵelement(21, \"input\", 14);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(22, \"label\");\n    i0.ɵɵtext(23, \"Tel\\u00E9fono: \");\n    i0.ɵɵelement(24, \"input\", 15);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(25, \"label\");\n    i0.ɵɵtext(26, \"Contrase\\u00F1a: \");\n    i0.ɵɵelement(27, \"input\", 16);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(28, \"label\");\n    i0.ɵɵtext(29, \"Estado: \");\n    i0.ɵɵelement(30, \"input\", 17);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(31, \"button\", 18);\n    i0.ɵɵtext(32, \"Guardar\");\n    i0.ɵɵelementEnd()()();\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    let tmp_1_0;\n    let tmp_2_0;\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"formGroup\", ctx_r0.clienteForm);\n    i0.ɵɵadvance(4);\n    i0.ɵɵproperty(\"ngIf\", ((tmp_1_0 = ctx_r0.clienteForm.get(\"clienteId\")) == null ? null : tmp_1_0.invalid) && ((tmp_1_0 = ctx_r0.clienteForm.get(\"clienteId\")) == null ? null : tmp_1_0.touched));\n    i0.ɵɵadvance(4);\n    i0.ɵɵproperty(\"ngIf\", ((tmp_2_0 = ctx_r0.clienteForm.get(\"nombre\")) == null ? null : tmp_2_0.invalid) && ((tmp_2_0 = ctx_r0.clienteForm.get(\"nombre\")) == null ? null : tmp_2_0.touched));\n    i0.ɵɵadvance(22);\n    i0.ɵɵproperty(\"disabled\", ctx_r0.clienteForm.invalid);\n  }\n}\nfunction ClienteComponent_table_7_tr_10_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r11 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"tr\")(1, \"td\");\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"td\");\n    i0.ɵɵtext(4);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(5, \"td\")(6, \"button\", 21);\n    i0.ɵɵlistener(\"click\", function ClienteComponent_table_7_tr_10_Template_button_click_6_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r11);\n      const cliente_r9 = restoredCtx.$implicit;\n      const ctx_r10 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r10.editar(cliente_r9));\n    });\n    i0.ɵɵtext(7, \"Editar\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(8, \"button\", 22);\n    i0.ɵɵlistener(\"click\", function ClienteComponent_table_7_tr_10_Template_button_click_8_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r11);\n      const cliente_r9 = restoredCtx.$implicit;\n      const ctx_r12 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r12.eliminar(cliente_r9.clienteId));\n    });\n    i0.ɵɵtext(9, \"Eliminar\");\n    i0.ɵɵelementEnd()()();\n  }\n  if (rf & 2) {\n    const cliente_r9 = ctx.$implicit;\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(cliente_r9.nombre);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(cliente_r9.identificacion);\n  }\n}\nfunction ClienteComponent_table_7_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"table\", 19)(1, \"thead\")(2, \"tr\")(3, \"th\");\n    i0.ɵɵtext(4, \"Nombre\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(5, \"th\");\n    i0.ɵɵtext(6, \"Identificaci\\u00F3n\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(7, \"th\");\n    i0.ɵɵtext(8, \"Acciones\");\n    i0.ɵɵelementEnd()()();\n    i0.ɵɵelementStart(9, \"tbody\");\n    i0.ɵɵtemplate(10, ClienteComponent_table_7_tr_10_Template, 10, 2, \"tr\", 20);\n    i0.ɵɵpipe(11, \"filtroCliente\");\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(10);\n    i0.ɵɵproperty(\"ngForOf\", i0.ɵɵpipeBind2(11, 1, ctx_r1.clientes, ctx_r1.filtro));\n  }\n}\nfunction ClienteComponent_p_8_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"p\");\n    i0.ɵɵtext(1, \"No hay clientes registrados.\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction ClienteComponent_div_9_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 23);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r3 = i0.ɵɵnextContext();\n    i0.ɵɵclassProp(\"error\", ctx_r3.esError);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", ctx_r3.mensaje, \"\\n\");\n  }\n}\nexport let ClienteComponent = /*#__PURE__*/(() => {\n  class ClienteComponent {\n    constructor(clienteService, fb) {\n      this.clienteService = clienteService;\n      this.fb = fb;\n      this.clientes = [];\n      this.filtro = '';\n      this.editando = false;\n      this.clienteIdEditando = null;\n      this.mostrarFormulario = false;\n      this.mensaje = '';\n      this.esError = false;\n      this.clienteForm = this.fb.group({\n        clienteId: ['', Validators.required],\n        nombre: ['', Validators.required],\n        genero: ['', Validators.required],\n        edad: ['', [Validators.required, Validators.min(1)]],\n        identificacion: ['', Validators.required],\n        direccion: ['', Validators.required],\n        telefono: ['', Validators.required],\n        contrasena: ['', Validators.required],\n        estado: [true]\n      });\n    }\n    ngOnInit() {\n      this.clienteService.getClientes().subscribe(data => {\n        this.clientes = data;\n      });\n    }\n    nuevo() {\n      this.resetForm();\n      this.mostrarFormulario = true;\n    }\n    mostrarMensaje(texto, error = false) {\n      this.mensaje = texto;\n      this.esError = error;\n      setTimeout(() => this.mensaje = '', 5000); // limpia el mensaje luego de 5s\n    }\n\n    submit() {\n      if (this.clienteForm.valid) {\n        const cliente = this.clienteForm.value;\n        if (this.editando && this.clienteIdEditando !== null) {\n          this.clienteService.update(this.clienteIdEditando, cliente).subscribe(actualizado => {\n            const index = this.clientes.findIndex(c => c.clienteId === this.clienteIdEditando);\n            if (index !== -1) this.clientes[index] = actualizado;\n            this.resetForm();\n          });\n        } else {\n          this.clienteService.create(cliente).subscribe({\n            next: nuevo => {\n              this.clientes.push(nuevo);\n              this.mostrarMensaje('Cliente registrado exitosamente');\n              this.resetForm();\n            },\n            error: () => {\n              this.mostrarMensaje('Ocurrió un error al guardar el cliente', true);\n            }\n          });\n        }\n      }\n    }\n    resetForm() {\n      this.clienteForm.reset({\n        estado: true\n      });\n      this.editando = false;\n      this.clienteIdEditando = null;\n      this.mostrarFormulario = false;\n    }\n    editar(cliente) {\n      this.editando = true;\n      this.clienteIdEditando = cliente.clienteId;\n      this.clienteForm.patchValue(cliente);\n      this.mostrarFormulario = true;\n    }\n    eliminar(id) {\n      this.clienteService.delete(id).subscribe(() => {\n        this.clientes = this.clientes.filter(c => c.clienteId !== id);\n      });\n    }\n    static {\n      this.ɵfac = function ClienteComponent_Factory(t) {\n        return new (t || ClienteComponent)(i0.ɵɵdirectiveInject(i1.ClienteService), i0.ɵɵdirectiveInject(i2.FormBuilder));\n      };\n    }\n    static {\n      this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n        type: ClienteComponent,\n        selectors: [[\"app-cliente\"]],\n        decls: 10,\n        vars: 5,\n        consts: [[1, \"cliente-header\"], [1, \"btn-nuevo\", 3, \"click\"], [\"class\", \"formulario\", 4, \"ngIf\"], [\"placeholder\", \"Buscar por nombre o ID\", 1, \"buscador\", 3, \"ngModel\", \"ngModelChange\"], [\"class\", \"tabla-clientes\", 4, \"ngIf\"], [4, \"ngIf\"], [\"class\", \"mensaje\", 3, \"error\", 4, \"ngIf\"], [1, \"formulario\"], [3, \"formGroup\", \"ngSubmit\"], [\"formControlName\", \"clienteId\", 1, \"campo\"], [\"formControlName\", \"nombre\", 1, \"campo\"], [\"formControlName\", \"genero\", 1, \"campo\"], [\"type\", \"number\", \"formControlName\", \"edad\", 1, \"campo\"], [\"formControlName\", \"identificacion\", 1, \"campo\"], [\"formControlName\", \"direccion\", 1, \"campo\"], [\"formControlName\", \"telefono\", 1, \"campo\"], [\"type\", \"password\", \"formControlName\", \"contrasena\", 1, \"campo\"], [\"type\", \"checkbox\", \"formControlName\", \"estado\", 1, \"campo\"], [\"type\", \"submit\", 1, \"btn-guardar\", 3, \"disabled\"], [1, \"tabla-clientes\"], [4, \"ngFor\", \"ngForOf\"], [1, \"btn-editar\", 3, \"click\"], [1, \"btn-eliminar\", 3, \"click\"], [1, \"mensaje\"]],\n        template: function ClienteComponent_Template(rf, ctx) {\n          if (rf & 1) {\n            i0.ɵɵelementStart(0, \"div\", 0)(1, \"h2\");\n            i0.ɵɵtext(2, \"Clientes\");\n            i0.ɵɵelementEnd();\n            i0.ɵɵelementStart(3, \"button\", 1);\n            i0.ɵɵlistener(\"click\", function ClienteComponent_Template_button_click_3_listener() {\n              return ctx.nuevo();\n            });\n            i0.ɵɵtext(4, \"+ Nuevo\");\n            i0.ɵɵelementEnd()();\n            i0.ɵɵtemplate(5, ClienteComponent_div_5_Template, 33, 4, \"div\", 2);\n            i0.ɵɵelementStart(6, \"input\", 3);\n            i0.ɵɵlistener(\"ngModelChange\", function ClienteComponent_Template_input_ngModelChange_6_listener($event) {\n              return ctx.filtro = $event;\n            });\n            i0.ɵɵelementEnd();\n            i0.ɵɵtemplate(7, ClienteComponent_table_7_Template, 12, 4, \"table\", 4);\n            i0.ɵɵtemplate(8, ClienteComponent_p_8_Template, 2, 0, \"p\", 5);\n            i0.ɵɵtemplate(9, ClienteComponent_div_9_Template, 2, 3, \"div\", 6);\n          }\n          if (rf & 2) {\n            i0.ɵɵadvance(5);\n            i0.ɵɵproperty(\"ngIf\", ctx.mostrarFormulario);\n            i0.ɵɵadvance(1);\n            i0.ɵɵproperty(\"ngModel\", ctx.filtro);\n            i0.ɵɵadvance(1);\n            i0.ɵɵproperty(\"ngIf\", ctx.clientes.length > 0);\n            i0.ɵɵadvance(1);\n            i0.ɵɵproperty(\"ngIf\", ctx.clientes.length === 0);\n            i0.ɵɵadvance(1);\n            i0.ɵɵproperty(\"ngIf\", ctx.mensaje);\n          }\n        },\n        dependencies: [i3.NgForOf, i3.NgIf, i2.ɵNgNoValidate, i2.DefaultValueAccessor, i2.NumberValueAccessor, i2.CheckboxControlValueAccessor, i2.NgControlStatus, i2.NgControlStatusGroup, i2.NgModel, i2.FormGroupDirective, i2.FormControlName, i4.FiltroClientePipe],\n        styles: [\".cliente-header[_ngcontent-%COMP%]{display:flex;justify-content:space-between;align-items:center;margin-bottom:1.5rem}.cliente-header[_ngcontent-%COMP%]   h2[_ngcontent-%COMP%]{margin:0}.nuevo-btn[_ngcontent-%COMP%]{background:#ffcc00;color:#000;border:none;padding:.5rem 1rem;font-weight:700;border-radius:4px;cursor:pointer}.buscador[_ngcontent-%COMP%]{width:100%;max-width:300px;padding:.5rem;margin-bottom:1rem;border:1px solid #ccc;border-radius:4px}.tabla-clientes[_ngcontent-%COMP%]{width:100%;border-collapse:collapse;background-color:#fff;box-shadow:0 0 5px #0000000d}.tabla-clientes[_ngcontent-%COMP%]   th[_ngcontent-%COMP%], .tabla-clientes[_ngcontent-%COMP%]   td[_ngcontent-%COMP%]{padding:.75rem;border-bottom:1px solid #eee;text-align:left}.btn-editar[_ngcontent-%COMP%], .btn-eliminar[_ngcontent-%COMP%]{margin-right:.5rem;padding:.4rem .8rem;border:none;border-radius:3px;cursor:pointer}.btn-editar[_ngcontent-%COMP%]{background-color:#007bff;color:#fff}.btn-eliminar[_ngcontent-%COMP%]{background-color:#dc3545;color:#fff}.btn-nuevo[_ngcontent-%COMP%]{background-color:#fd0;color:#000;border:none;padding:.6rem 1.5rem;font-weight:700;border-radius:6px;cursor:pointer;transition:background-color .2s}.btn-nuevo[_ngcontent-%COMP%]:hover{background-color:#e6c800}.formulario[_ngcontent-%COMP%]{margin-top:1.5rem;background:#fff;padding:1rem 1.5rem;border-radius:8px;box-shadow:0 0 8px #0000000d}.campo[_ngcontent-%COMP%]{display:flex;flex-direction:column;margin-bottom:1rem}.btn-guardar[_ngcontent-%COMP%]{background:#007bff;color:#fff;padding:.5rem 1rem;border:none;margin-right:.5rem;border-radius:4px;cursor:pointer}.mensaje[_ngcontent-%COMP%]{padding:.75rem;margin-bottom:1rem;border-radius:5px;background-color:#d4edda;color:#155724;border:1px solid #c3e6cb}.mensaje.error[_ngcontent-%COMP%]{background-color:#f8d7da;color:#721c24;border-color:#f5c6cb}\"]\n      });\n    }\n  }\n  return ClienteComponent;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}