{"ast":null,"code":"import { Validators } from '@angular/forms';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../../services/cuenta.service\";\nimport * as i2 from \"@angular/forms\";\nimport * as i3 from \"@angular/common\";\nimport * as i4 from \"../../pipes/filtro-cuenta.pipe\";\nfunction CuentaComponent_div_5_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r3 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"div\", 5)(1, \"form\", 6);\n    i0.ɵɵlistener(\"ngSubmit\", function CuentaComponent_div_5_Template_form_ngSubmit_1_listener() {\n      i0.ɵɵrestoreView(_r3);\n      const ctx_r2 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r2.submit());\n    });\n    i0.ɵɵelementStart(2, \"label\");\n    i0.ɵɵtext(3, \"N\\u00FAmero Cuenta: \");\n    i0.ɵɵelement(4, \"input\", 7);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(5, \"label\");\n    i0.ɵɵtext(6, \"Tipo Cuenta: \");\n    i0.ɵɵelement(7, \"input\", 8);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(8, \"label\");\n    i0.ɵɵtext(9, \"Saldo Inicial: \");\n    i0.ɵɵelement(10, \"input\", 9);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(11, \"label\");\n    i0.ɵɵtext(12, \"Estado: \");\n    i0.ɵɵelement(13, \"input\", 10);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(14, \"div\", 11)(15, \"label\");\n    i0.ɵɵtext(16, \"ID Cliente: \");\n    i0.ɵɵelement(17, \"input\", 12);\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(18, \"button\", 13);\n    i0.ɵɵtext(19, \"Guardar\");\n    i0.ɵɵelementEnd()()();\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"formGroup\", ctx_r0.cuentaForm);\n    i0.ɵɵadvance(17);\n    i0.ɵɵproperty(\"disabled\", ctx_r0.cuentaForm.invalid);\n  }\n}\nfunction CuentaComponent_table_7_tr_14_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r7 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"tr\")(1, \"td\");\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"td\");\n    i0.ɵɵtext(4);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(5, \"td\");\n    i0.ɵɵtext(6);\n    i0.ɵɵpipe(7, \"currency\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(8, \"td\");\n    i0.ɵɵtext(9);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(10, \"td\")(11, \"button\", 16);\n    i0.ɵɵlistener(\"click\", function CuentaComponent_table_7_tr_14_Template_button_click_11_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r7);\n      const cuenta_r5 = restoredCtx.$implicit;\n      const ctx_r6 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r6.editar(cuenta_r5));\n    });\n    i0.ɵɵtext(12, \"Editar\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(13, \"button\", 17);\n    i0.ɵɵlistener(\"click\", function CuentaComponent_table_7_tr_14_Template_button_click_13_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r7);\n      const cuenta_r5 = restoredCtx.$implicit;\n      const ctx_r8 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r8.eliminar(cuenta_r5.numeroCuenta));\n    });\n    i0.ɵɵtext(14, \"Eliminar\");\n    i0.ɵɵelementEnd()()();\n  }\n  if (rf & 2) {\n    const cuenta_r5 = ctx.$implicit;\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(cuenta_r5.numeroCuenta);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(cuenta_r5.tipoCuenta);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(i0.ɵɵpipeBind1(7, 4, cuenta_r5.saldoInicial));\n    i0.ɵɵadvance(3);\n    i0.ɵɵtextInterpolate(cuenta_r5.estado ? \"Activa\" : \"Inactiva\");\n  }\n}\nfunction CuentaComponent_table_7_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"table\", 14)(1, \"thead\")(2, \"tr\")(3, \"th\");\n    i0.ɵɵtext(4, \"N\\u00FAmero\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(5, \"th\");\n    i0.ɵɵtext(6, \"Tipo\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(7, \"th\");\n    i0.ɵɵtext(8, \"Saldo\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(9, \"th\");\n    i0.ɵɵtext(10, \"Estado\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(11, \"th\");\n    i0.ɵɵtext(12, \"Acciones\");\n    i0.ɵɵelementEnd()()();\n    i0.ɵɵelementStart(13, \"tbody\");\n    i0.ɵɵtemplate(14, CuentaComponent_table_7_tr_14_Template, 15, 6, \"tr\", 15);\n    i0.ɵɵpipe(15, \"filtroCuenta\");\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(14);\n    i0.ɵɵproperty(\"ngForOf\", i0.ɵɵpipeBind2(15, 1, ctx_r1.cuentas, ctx_r1.filtro));\n  }\n}\nexport let CuentaComponent = /*#__PURE__*/(() => {\n  class CuentaComponent {\n    constructor(cuentaService, fb) {\n      this.cuentaService = cuentaService;\n      this.fb = fb;\n      this.cuentas = [];\n      this.editando = false;\n      this.cuentaIdEditando = null;\n      this.filtro = '';\n      this.mostrarFormulario = false;\n      this.mensaje = '';\n      this.esError = false;\n      this.cuentaForm = this.fb.group({\n        numeroCuenta: ['', Validators.required],\n        tipoCuenta: ['', Validators.required],\n        saldoInicial: [0, [Validators.required, Validators.min(0)]],\n        estado: [true],\n        cliente: this.fb.group({\n          clienteId: ['', Validators.required]\n        })\n      });\n    }\n    ngOnInit() {\n      this.cuentaService.getCuentas().subscribe(data => {\n        this.cuentas = data;\n      });\n    }\n    nuevo() {\n      this.resetForm();\n      this.mostrarFormulario = true;\n    }\n    mostrarMensaje(texto, error = false) {\n      this.mensaje = texto;\n      this.esError = error;\n      setTimeout(() => this.mensaje = '', 5000); // limpia el mensaje luego de 5s\n    }\n\n    submit() {\n      if (this.cuentaForm.valid) {\n        const cuenta = this.cuentaForm.value;\n        if (this.editando && this.cuentaIdEditando !== null) {\n          this.cuentaService.update(this.cuentaIdEditando, cuenta).subscribe(actualizada => {\n            const index = this.cuentas.findIndex(c => c.numeroCuenta === this.cuentaIdEditando);\n            if (index !== -1) this.cuentas[index] = actualizada;\n            this.resetForm();\n          });\n        } else {\n          this.cuentaService.create(cuenta).subscribe({\n            next: nueva => {\n              this.cuentas.push(nueva);\n              this.mostrarMensaje('Cuenta registrada exitosamente');\n              this.resetForm();\n            },\n            error: () => {\n              this.mostrarMensaje('Ocurrió un error al guardar la cuenta', true);\n            }\n          });\n        }\n      }\n    }\n    resetForm() {\n      this.cuentaForm.reset({\n        estado: true\n      });\n      this.editando = false;\n      this.cuentaIdEditando = null;\n    }\n    editar(cuenta) {\n      this.editando = true;\n      this.cuentaIdEditando = cuenta.numeroCuenta;\n      this.cuentaForm.patchValue(cuenta);\n    }\n    eliminar(id) {\n      this.cuentaService.delete(id).subscribe(() => {\n        this.cuentas = this.cuentas.filter(c => c.numeroCuenta !== id);\n      });\n    }\n    static {\n      this.ɵfac = function CuentaComponent_Factory(t) {\n        return new (t || CuentaComponent)(i0.ɵɵdirectiveInject(i1.CuentaService), i0.ɵɵdirectiveInject(i2.FormBuilder));\n      };\n    }\n    static {\n      this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n        type: CuentaComponent,\n        selectors: [[\"app-cuenta\"]],\n        decls: 8,\n        vars: 3,\n        consts: [[1, \"cabecera\"], [1, \"btn-nuevo\", 3, \"click\"], [\"class\", \"formulario\", 4, \"ngIf\"], [\"placeholder\", \"Buscar por n\\u00FAmero o tipo de cuenta\", 1, \"buscador\", 3, \"ngModel\", \"ngModelChange\"], [\"class\", \"tabla-clientes\", 4, \"ngIf\"], [1, \"formulario\"], [3, \"formGroup\", \"ngSubmit\"], [\"formControlName\", \"numeroCuenta\", 1, \"campo\"], [\"formControlName\", \"tipoCuenta\", 1, \"campo\"], [\"type\", \"number\", \"formControlName\", \"saldoInicial\", 1, \"campo\"], [\"type\", \"checkbox\", \"formControlName\", \"estado\", 1, \"campo\"], [\"formGroupName\", \"cliente\"], [\"formControlName\", \"clienteId\", 1, \"campo\"], [\"type\", \"submit\", 3, \"disabled\"], [1, \"tabla-clientes\"], [4, \"ngFor\", \"ngForOf\"], [1, \"btn-editar\", 3, \"click\"], [1, \"btn-eliminar\", 3, \"click\"]],\n        template: function CuentaComponent_Template(rf, ctx) {\n          if (rf & 1) {\n            i0.ɵɵelementStart(0, \"div\", 0)(1, \"h2\");\n            i0.ɵɵtext(2, \"Cuentas\");\n            i0.ɵɵelementEnd();\n            i0.ɵɵelementStart(3, \"button\", 1);\n            i0.ɵɵlistener(\"click\", function CuentaComponent_Template_button_click_3_listener() {\n              return ctx.nuevo();\n            });\n            i0.ɵɵtext(4, \"+ Nuevo\");\n            i0.ɵɵelementEnd()();\n            i0.ɵɵtemplate(5, CuentaComponent_div_5_Template, 20, 2, \"div\", 2);\n            i0.ɵɵelementStart(6, \"input\", 3);\n            i0.ɵɵlistener(\"ngModelChange\", function CuentaComponent_Template_input_ngModelChange_6_listener($event) {\n              return ctx.filtro = $event;\n            });\n            i0.ɵɵelementEnd();\n            i0.ɵɵtemplate(7, CuentaComponent_table_7_Template, 16, 4, \"table\", 4);\n          }\n          if (rf & 2) {\n            i0.ɵɵadvance(5);\n            i0.ɵɵproperty(\"ngIf\", ctx.mostrarFormulario);\n            i0.ɵɵadvance(1);\n            i0.ɵɵproperty(\"ngModel\", ctx.filtro);\n            i0.ɵɵadvance(1);\n            i0.ɵɵproperty(\"ngIf\", ctx.cuentas.length > 0);\n          }\n        },\n        dependencies: [i3.NgForOf, i3.NgIf, i2.ɵNgNoValidate, i2.DefaultValueAccessor, i2.NumberValueAccessor, i2.CheckboxControlValueAccessor, i2.NgControlStatus, i2.NgControlStatusGroup, i2.NgModel, i2.FormGroupDirective, i2.FormControlName, i2.FormGroupName, i3.CurrencyPipe, i4.FiltroCuentaPipe],\n        styles: [\".cabecera[_ngcontent-%COMP%]{display:flex;justify-content:space-between;align-items:center;margin-bottom:1.5rem}.cabecera[_ngcontent-%COMP%]   h2[_ngcontent-%COMP%]{margin:0}.nuevo-btn[_ngcontent-%COMP%]{background:#ffcc00;color:#000;border:none;padding:.5rem 1rem;font-weight:700;border-radius:4px;cursor:pointer}.buscador[_ngcontent-%COMP%]{width:100%;max-width:300px;padding:.5rem;margin-bottom:1rem;border:1px solid #ccc;border-radius:4px}.tabla-clientes[_ngcontent-%COMP%]{width:100%;border-collapse:collapse;background-color:#fff;box-shadow:0 0 5px #0000000d}.tabla-clientes[_ngcontent-%COMP%]   th[_ngcontent-%COMP%], .tabla-clientes[_ngcontent-%COMP%]   td[_ngcontent-%COMP%]{padding:.75rem;border-bottom:1px solid #eee;text-align:left}.btn-editar[_ngcontent-%COMP%], .btn-eliminar[_ngcontent-%COMP%]{margin-right:.5rem;padding:.4rem .8rem;border:none;border-radius:3px;cursor:pointer}.btn-editar[_ngcontent-%COMP%]{background-color:#007bff;color:#fff}.btn-eliminar[_ngcontent-%COMP%]{background-color:#dc3545;color:#fff}.btn-nuevo[_ngcontent-%COMP%]{background-color:#fd0;color:#000;border:none;padding:.6rem 1.5rem;font-weight:700;border-radius:6px;cursor:pointer;transition:background-color .2s}.btn-nuevo[_ngcontent-%COMP%]:hover{background-color:#e6c800}.formulario[_ngcontent-%COMP%]{margin-top:1.5rem;background:#fff;padding:1rem 1.5rem;border-radius:8px;box-shadow:0 0 8px #0000000d}.campo[_ngcontent-%COMP%]{display:flex;flex-direction:column;margin-bottom:1rem}.btn-guardar[_ngcontent-%COMP%]{background:#007bff;color:#fff;padding:.5rem 1rem;border:none;margin-right:.5rem;border-radius:4px;cursor:pointer}.mensaje[_ngcontent-%COMP%]{padding:.75rem;margin-bottom:1rem;border-radius:5px;background-color:#d4edda;color:#155724;border:1px solid #c3e6cb}.mensaje.error[_ngcontent-%COMP%]{background-color:#f8d7da;color:#721c24;border-color:#f5c6cb}\"]\n      });\n    }\n  }\n  return CuentaComponent;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}