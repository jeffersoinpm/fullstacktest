{"ast":null,"code":"import { Validators } from '@angular/forms';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../../services/cliente.service\";\nimport * as i2 from \"@angular/forms\";\nimport * as i3 from \"@angular/common\";\nimport * as i4 from \"../../pipes/filtro-cliente.pipe\";\nfunction ClienteComponent_div_3_div_5_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtext(1, \"ID requerido\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction ClienteComponent_div_3_div_9_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtext(1, \"Nombre requerido\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction ClienteComponent_div_3_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r5 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"div\")(1, \"form\", 3);\n    i0.ɵɵlistener(\"ngSubmit\", function ClienteComponent_div_3_Template_form_ngSubmit_1_listener() {\n      i0.ɵɵrestoreView(_r5);\n      const ctx_r4 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r4.submit());\n    });\n    i0.ɵɵelementStart(2, \"label\");\n    i0.ɵɵtext(3, \"ID: \");\n    i0.ɵɵelement(4, \"input\", 4);\n    i0.ɵɵelementEnd();\n    i0.ɵɵtemplate(5, ClienteComponent_div_3_div_5_Template, 2, 0, \"div\", 1);\n    i0.ɵɵelementStart(6, \"label\");\n    i0.ɵɵtext(7, \"Nombre: \");\n    i0.ɵɵelement(8, \"input\", 5);\n    i0.ɵɵelementEnd();\n    i0.ɵɵtemplate(9, ClienteComponent_div_3_div_9_Template, 2, 0, \"div\", 1);\n    i0.ɵɵelementStart(10, \"label\");\n    i0.ɵɵtext(11, \"G\\u00E9nero: \");\n    i0.ɵɵelement(12, \"input\", 6);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(13, \"label\");\n    i0.ɵɵtext(14, \"Edad: \");\n    i0.ɵɵelement(15, \"input\", 7);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(16, \"label\");\n    i0.ɵɵtext(17, \"Identificaci\\u00F3n: \");\n    i0.ɵɵelement(18, \"input\", 8);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(19, \"label\");\n    i0.ɵɵtext(20, \"Direcci\\u00F3n: \");\n    i0.ɵɵelement(21, \"input\", 9);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(22, \"label\");\n    i0.ɵɵtext(23, \"Tel\\u00E9fono: \");\n    i0.ɵɵelement(24, \"input\", 10);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(25, \"label\");\n    i0.ɵɵtext(26, \"Contrase\\u00F1a: \");\n    i0.ɵɵelement(27, \"input\", 11);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(28, \"label\");\n    i0.ɵɵtext(29, \"Estado: \");\n    i0.ɵɵelement(30, \"input\", 12);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(31, \"button\", 13);\n    i0.ɵɵtext(32, \"Guardar\");\n    i0.ɵɵelementEnd()()();\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    let tmp_1_0;\n    let tmp_2_0;\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"formGroup\", ctx_r0.clienteForm);\n    i0.ɵɵadvance(4);\n    i0.ɵɵproperty(\"ngIf\", ((tmp_1_0 = ctx_r0.clienteForm.get(\"clienteId\")) == null ? null : tmp_1_0.invalid) && ((tmp_1_0 = ctx_r0.clienteForm.get(\"clienteId\")) == null ? null : tmp_1_0.touched));\n    i0.ɵɵadvance(4);\n    i0.ɵɵproperty(\"ngIf\", ((tmp_2_0 = ctx_r0.clienteForm.get(\"nombre\")) == null ? null : tmp_2_0.invalid) && ((tmp_2_0 = ctx_r0.clienteForm.get(\"nombre\")) == null ? null : tmp_2_0.touched));\n    i0.ɵɵadvance(22);\n    i0.ɵɵproperty(\"disabled\", ctx_r0.clienteForm.invalid);\n  }\n}\nfunction ClienteComponent_li_7_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r8 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"li\");\n    i0.ɵɵtext(1);\n    i0.ɵɵelementStart(2, \"button\", 14);\n    i0.ɵɵlistener(\"click\", function ClienteComponent_li_7_Template_button_click_2_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r8);\n      const cliente_r6 = restoredCtx.$implicit;\n      const ctx_r7 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r7.editar(cliente_r6));\n    });\n    i0.ɵɵtext(3, \"Editar\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(4, \"button\", 14);\n    i0.ɵɵlistener(\"click\", function ClienteComponent_li_7_Template_button_click_4_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r8);\n      const cliente_r6 = restoredCtx.$implicit;\n      const ctx_r9 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r9.eliminar(cliente_r6.clienteId));\n    });\n    i0.ɵɵtext(5, \"Eliminar\");\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const cliente_r6 = ctx.$implicit;\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate2(\" \", cliente_r6.nombre, \" - \", cliente_r6.identificacion, \" \");\n  }\n}\nexport let ClienteComponent = /*#__PURE__*/(() => {\n  class ClienteComponent {\n    constructor(clienteService, fb) {\n      this.clienteService = clienteService;\n      this.fb = fb;\n      this.clientes = [];\n      this.filtro = '';\n      this.editando = false;\n      this.clienteIdEditando = null;\n      this.mostrarFormulario = false;\n      this.clienteForm = this.fb.group({\n        clienteId: ['', Validators.required],\n        nombre: ['', Validators.required],\n        genero: ['', Validators.required],\n        edad: ['', [Validators.required, Validators.min(1)]],\n        identificacion: ['', Validators.required],\n        direccion: ['', Validators.required],\n        telefono: ['', Validators.required],\n        contrasena: ['', Validators.required],\n        estado: [true]\n      });\n    }\n    ngOnInit() {\n      this.clienteService.getClientes().subscribe(data => {\n        this.clientes = data;\n      });\n    }\n    nuevo() {\n      this.resetForm();\n      this.mostrarFormulario = true;\n    }\n    submit() {\n      if (this.clienteForm.valid) {\n        const cliente = this.clienteForm.value;\n        if (this.editando && this.clienteIdEditando !== null) {\n          this.clienteService.update(this.clienteIdEditando, cliente).subscribe(actualizado => {\n            const index = this.clientes.findIndex(c => c.clienteId === this.clienteIdEditando);\n            if (index !== -1) this.clientes[index] = actualizado;\n            this.resetForm();\n          });\n        } else {\n          this.clienteService.create(cliente).subscribe(nuevo => {\n            this.clientes.push(nuevo);\n            this.resetForm();\n          });\n        }\n      }\n    }\n    resetForm() {\n      this.clienteForm.reset({\n        estado: true\n      });\n      this.editando = false;\n      this.clienteIdEditando = null;\n      this.mostrarFormulario = false;\n    }\n    editar(cliente) {\n      this.editando = true;\n      this.clienteIdEditando = cliente.clienteId;\n      this.clienteForm.patchValue(cliente);\n    }\n    eliminar(id) {\n      this.clienteService.delete(id).subscribe(() => {\n        this.clientes = this.clientes.filter(c => c.clienteId !== id);\n      });\n    }\n    static {\n      this.ɵfac = function ClienteComponent_Factory(t) {\n        return new (t || ClienteComponent)(i0.ɵɵdirectiveInject(i1.ClienteService), i0.ɵɵdirectiveInject(i2.FormBuilder));\n      };\n    }\n    static {\n      this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n        type: ClienteComponent,\n        selectors: [[\"app-cliente\"]],\n        decls: 9,\n        vars: 6,\n        consts: [[\"placeholder\", \"Buscar por nombre o ID\", 3, \"ngModel\", \"ngModelChange\"], [4, \"ngIf\"], [4, \"ngFor\", \"ngForOf\"], [3, \"formGroup\", \"ngSubmit\"], [\"formControlName\", \"clienteId\"], [\"formControlName\", \"nombre\"], [\"formControlName\", \"genero\"], [\"type\", \"number\", \"formControlName\", \"edad\"], [\"formControlName\", \"identificacion\"], [\"formControlName\", \"direccion\"], [\"formControlName\", \"telefono\"], [\"type\", \"password\", \"formControlName\", \"contrasena\"], [\"type\", \"checkbox\", \"formControlName\", \"estado\"], [\"type\", \"submit\", 3, \"disabled\"], [3, \"click\"]],\n        template: function ClienteComponent_Template(rf, ctx) {\n          if (rf & 1) {\n            i0.ɵɵelementStart(0, \"h2\");\n            i0.ɵɵtext(1, \"Clientes\");\n            i0.ɵɵelementEnd();\n            i0.ɵɵelementStart(2, \"input\", 0);\n            i0.ɵɵlistener(\"ngModelChange\", function ClienteComponent_Template_input_ngModelChange_2_listener($event) {\n              return ctx.filtro = $event;\n            });\n            i0.ɵɵelementEnd();\n            i0.ɵɵtemplate(3, ClienteComponent_div_3_Template, 33, 4, \"div\", 1);\n            i0.ɵɵelementStart(4, \"h3\");\n            i0.ɵɵtext(5, \"Clientes\");\n            i0.ɵɵelementEnd();\n            i0.ɵɵelementStart(6, \"ul\");\n            i0.ɵɵtemplate(7, ClienteComponent_li_7_Template, 6, 2, \"li\", 2);\n            i0.ɵɵpipe(8, \"filtroCliente\");\n            i0.ɵɵelementEnd();\n          }\n          if (rf & 2) {\n            i0.ɵɵadvance(2);\n            i0.ɵɵproperty(\"ngModel\", ctx.filtro);\n            i0.ɵɵadvance(1);\n            i0.ɵɵproperty(\"ngIf\", ctx.mostrarFormulario);\n            i0.ɵɵadvance(4);\n            i0.ɵɵproperty(\"ngForOf\", i0.ɵɵpipeBind2(8, 3, ctx.clientes, ctx.filtro));\n          }\n        },\n        dependencies: [i3.NgForOf, i3.NgIf, i2.ɵNgNoValidate, i2.DefaultValueAccessor, i2.NumberValueAccessor, i2.CheckboxControlValueAccessor, i2.NgControlStatus, i2.NgControlStatusGroup, i2.NgModel, i2.FormGroupDirective, i2.FormControlName, i4.FiltroClientePipe],\n        encapsulation: 2\n      });\n    }\n  }\n  return ClienteComponent;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}