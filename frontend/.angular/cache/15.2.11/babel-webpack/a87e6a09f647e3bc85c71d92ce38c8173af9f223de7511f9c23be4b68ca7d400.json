{"ast":null,"code":"import { Validators } from '@angular/forms';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../../services/cliente.service\";\nimport * as i2 from \"@angular/forms\";\nimport * as i3 from \"@angular/common\";\nfunction ClienteComponent_div_6_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtext(1, \"ID requerido\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction ClienteComponent_div_10_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtext(1, \"Nombre requerido\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction ClienteComponent_li_35_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"li\");\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const cliente_r3 = ctx.$implicit;\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate2(\" \", cliente_r3.nombre, \" - \", cliente_r3.identificacion, \" \");\n  }\n}\nexport let ClienteComponent = /*#__PURE__*/(() => {\n  class ClienteComponent {\n    constructor(clienteService, fb) {\n      this.clienteService = clienteService;\n      this.fb = fb;\n      this.clientes = [];\n      this.clienteForm = this.fb.group({\n        clienteId: ['', Validators.required],\n        nombre: ['', Validators.required],\n        genero: ['', Validators.required],\n        edad: ['', [Validators.required, Validators.min(1)]],\n        identificacion: ['', Validators.required],\n        direccion: ['', Validators.required],\n        telefono: ['', Validators.required],\n        contrasena: ['', Validators.required],\n        estado: [true]\n      });\n    }\n    ngOnInit() {\n      this.clienteService.getClientes().subscribe(data => {\n        this.clientes = data;\n      });\n    }\n    submit() {\n      if (this.clienteForm.valid) {\n        this.clienteService.create(this.clienteForm.value).subscribe(cliente => {\n          this.clientes.push(cliente);\n          this.clienteForm.reset({\n            estado: true\n          });\n        });\n      }\n    }\n    static {\n      this.ɵfac = function ClienteComponent_Factory(t) {\n        return new (t || ClienteComponent)(i0.ɵɵdirectiveInject(i1.ClienteService), i0.ɵɵdirectiveInject(i2.FormBuilder));\n      };\n    }\n    static {\n      this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n        type: ClienteComponent,\n        selectors: [[\"app-cliente\"]],\n        decls: 36,\n        vars: 5,\n        consts: [[3, \"formGroup\", \"ngSubmit\"], [\"formControlName\", \"clienteId\"], [4, \"ngIf\"], [\"formControlName\", \"nombre\"], [\"formControlName\", \"genero\"], [\"type\", \"number\", \"formControlName\", \"edad\"], [\"formControlName\", \"identificacion\"], [\"formControlName\", \"direccion\"], [\"formControlName\", \"telefono\"], [\"type\", \"password\", \"formControlName\", \"contrasena\"], [\"type\", \"checkbox\", \"formControlName\", \"estado\"], [\"type\", \"submit\", 3, \"disabled\"], [4, \"ngFor\", \"ngForOf\"]],\n        template: function ClienteComponent_Template(rf, ctx) {\n          if (rf & 1) {\n            i0.ɵɵelementStart(0, \"h2\");\n            i0.ɵɵtext(1, \"Clientes\");\n            i0.ɵɵelementEnd();\n            i0.ɵɵelementStart(2, \"form\", 0);\n            i0.ɵɵlistener(\"ngSubmit\", function ClienteComponent_Template_form_ngSubmit_2_listener() {\n              return ctx.submit();\n            });\n            i0.ɵɵelementStart(3, \"label\");\n            i0.ɵɵtext(4, \"ID: \");\n            i0.ɵɵelement(5, \"input\", 1);\n            i0.ɵɵelementEnd();\n            i0.ɵɵtemplate(6, ClienteComponent_div_6_Template, 2, 0, \"div\", 2);\n            i0.ɵɵelementStart(7, \"label\");\n            i0.ɵɵtext(8, \"Nombre: \");\n            i0.ɵɵelement(9, \"input\", 3);\n            i0.ɵɵelementEnd();\n            i0.ɵɵtemplate(10, ClienteComponent_div_10_Template, 2, 0, \"div\", 2);\n            i0.ɵɵelementStart(11, \"label\");\n            i0.ɵɵtext(12, \"G\\u00E9nero: \");\n            i0.ɵɵelement(13, \"input\", 4);\n            i0.ɵɵelementEnd();\n            i0.ɵɵelementStart(14, \"label\");\n            i0.ɵɵtext(15, \"Edad: \");\n            i0.ɵɵelement(16, \"input\", 5);\n            i0.ɵɵelementEnd();\n            i0.ɵɵelementStart(17, \"label\");\n            i0.ɵɵtext(18, \"Identificaci\\u00F3n: \");\n            i0.ɵɵelement(19, \"input\", 6);\n            i0.ɵɵelementEnd();\n            i0.ɵɵelementStart(20, \"label\");\n            i0.ɵɵtext(21, \"Direcci\\u00F3n: \");\n            i0.ɵɵelement(22, \"input\", 7);\n            i0.ɵɵelementEnd();\n            i0.ɵɵelementStart(23, \"label\");\n            i0.ɵɵtext(24, \"Tel\\u00E9fono: \");\n            i0.ɵɵelement(25, \"input\", 8);\n            i0.ɵɵelementEnd();\n            i0.ɵɵelementStart(26, \"label\");\n            i0.ɵɵtext(27, \"Contrase\\u00F1a: \");\n            i0.ɵɵelement(28, \"input\", 9);\n            i0.ɵɵelementEnd();\n            i0.ɵɵelementStart(29, \"label\");\n            i0.ɵɵtext(30, \"Estado: \");\n            i0.ɵɵelement(31, \"input\", 10);\n            i0.ɵɵelementEnd();\n            i0.ɵɵelementStart(32, \"button\", 11);\n            i0.ɵɵtext(33, \"Guardar\");\n            i0.ɵɵelementEnd()();\n            i0.ɵɵelementStart(34, \"ul\");\n            i0.ɵɵtemplate(35, ClienteComponent_li_35_Template, 2, 2, \"li\", 12);\n            i0.ɵɵelementEnd();\n          }\n          if (rf & 2) {\n            let tmp_1_0;\n            let tmp_2_0;\n            i0.ɵɵadvance(2);\n            i0.ɵɵproperty(\"formGroup\", ctx.clienteForm);\n            i0.ɵɵadvance(4);\n            i0.ɵɵproperty(\"ngIf\", ((tmp_1_0 = ctx.clienteForm.get(\"clienteId\")) == null ? null : tmp_1_0.invalid) && ((tmp_1_0 = ctx.clienteForm.get(\"clienteId\")) == null ? null : tmp_1_0.touched));\n            i0.ɵɵadvance(4);\n            i0.ɵɵproperty(\"ngIf\", ((tmp_2_0 = ctx.clienteForm.get(\"nombre\")) == null ? null : tmp_2_0.invalid) && ((tmp_2_0 = ctx.clienteForm.get(\"nombre\")) == null ? null : tmp_2_0.touched));\n            i0.ɵɵadvance(22);\n            i0.ɵɵproperty(\"disabled\", ctx.clienteForm.invalid);\n            i0.ɵɵadvance(3);\n            i0.ɵɵproperty(\"ngForOf\", ctx.clientes);\n          }\n        },\n        dependencies: [i3.NgForOf, i3.NgIf, i2.ɵNgNoValidate, i2.DefaultValueAccessor, i2.NumberValueAccessor, i2.CheckboxControlValueAccessor, i2.NgControlStatus, i2.NgControlStatusGroup, i2.FormGroupDirective, i2.FormControlName],\n        encapsulation: 2\n      });\n    }\n  }\n  return ClienteComponent;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}