{"ast":null,"code":"import { Validators } from '@angular/forms';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../../services/cuenta.service\";\nimport * as i2 from \"@angular/forms\";\nimport * as i3 from \"@angular/common\";\nfunction CuentaComponent_li_23_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r3 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"li\");\n    i0.ɵɵtext(1);\n    i0.ɵɵelementStart(2, \"button\", 9);\n    i0.ɵɵlistener(\"click\", function CuentaComponent_li_23_Template_button_click_2_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r3);\n      const cuenta_r1 = restoredCtx.$implicit;\n      const ctx_r2 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r2.editar(cuenta_r1));\n    });\n    i0.ɵɵtext(3, \"Editar\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(4, \"button\", 9);\n    i0.ɵɵlistener(\"click\", function CuentaComponent_li_23_Template_button_click_4_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r3);\n      const cuenta_r1 = restoredCtx.$implicit;\n      const ctx_r4 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r4.eliminar(cuenta_r1.numeroCuenta));\n    });\n    i0.ɵɵtext(5, \"Eliminar\");\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const cuenta_r1 = ctx.$implicit;\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate3(\" \", cuenta_r1.numeroCuenta, \" - \", cuenta_r1.tipoCuenta, \" - \", cuenta_r1.saldoInicial, \" \");\n  }\n}\nexport let CuentaComponent = /*#__PURE__*/(() => {\n  class CuentaComponent {\n    constructor(cuentaService, fb) {\n      this.cuentaService = cuentaService;\n      this.fb = fb;\n      this.cuentas = [];\n      this.editando = false;\n      this.cuentaIdEditando = null;\n      this.filtro = ''; // Para la búsqueda\n      this.cuentaForm = this.fb.group({\n        numeroCuenta: ['', Validators.required],\n        tipoCuenta: ['', Validators.required],\n        saldoInicial: [0, [Validators.required, Validators.min(0)]],\n        estado: [true],\n        cliente: this.fb.group({\n          clienteId: ['', Validators.required]\n        })\n      });\n    }\n    ngOnInit() {\n      this.cuentaService.getCuentas().subscribe(data => {\n        this.cuentas = data;\n      });\n    }\n    submit() {\n      if (this.cuentaForm.valid) {\n        const cuenta = this.cuentaForm.value;\n        if (this.editando && this.cuentaIdEditando !== null) {\n          this.cuentaService.update(this.cuentaIdEditando, cuenta).subscribe(actualizada => {\n            const index = this.cuentas.findIndex(c => c.numeroCuenta === this.cuentaIdEditando);\n            if (index !== -1) this.cuentas[index] = actualizada;\n            this.resetForm();\n          });\n        } else {\n          this.cuentaService.create(cuenta).subscribe(nueva => {\n            this.cuentas.push(nueva);\n            this.resetForm();\n          });\n        }\n      }\n    }\n    resetForm() {\n      this.cuentaForm.reset({\n        estado: true\n      });\n      this.editando = false;\n      this.cuentaIdEditando = null;\n    }\n    editar(cuenta) {\n      this.editando = true;\n      this.cuentaIdEditando = cuenta.numeroCuenta;\n      this.cuentaForm.patchValue(cuenta);\n    }\n    eliminar(id) {\n      this.cuentaService.delete(id).subscribe(() => {\n        this.cuentas = this.cuentas.filter(c => c.numeroCuenta !== id);\n      });\n    }\n    static {\n      this.ɵfac = function CuentaComponent_Factory(t) {\n        return new (t || CuentaComponent)(i0.ɵɵdirectiveInject(i1.CuentaService), i0.ɵɵdirectiveInject(i2.FormBuilder));\n      };\n    }\n    static {\n      this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n        type: CuentaComponent,\n        selectors: [[\"app-cuenta\"]],\n        decls: 25,\n        vars: 6,\n        consts: [[3, \"formGroup\", \"ngSubmit\"], [\"formControlName\", \"numeroCuenta\"], [\"formControlName\", \"tipoCuenta\"], [\"type\", \"number\", \"formControlName\", \"saldoInicial\"], [\"type\", \"checkbox\", \"formControlName\", \"estado\"], [\"formGroupName\", \"cliente\"], [\"formControlName\", \"clienteId\"], [\"type\", \"submit\", 3, \"disabled\"], [4, \"ngFor\", \"ngForOf\"], [3, \"click\"]],\n        template: function CuentaComponent_Template(rf, ctx) {\n          if (rf & 1) {\n            i0.ɵɵelementStart(0, \"h2\");\n            i0.ɵɵtext(1, \"Cuentas\");\n            i0.ɵɵelementEnd();\n            i0.ɵɵelementStart(2, \"form\", 0);\n            i0.ɵɵlistener(\"ngSubmit\", function CuentaComponent_Template_form_ngSubmit_2_listener() {\n              return ctx.submit();\n            });\n            i0.ɵɵelementStart(3, \"label\");\n            i0.ɵɵtext(4, \"N\\u00FAmero Cuenta: \");\n            i0.ɵɵelement(5, \"input\", 1);\n            i0.ɵɵelementEnd();\n            i0.ɵɵelementStart(6, \"label\");\n            i0.ɵɵtext(7, \"Tipo Cuenta: \");\n            i0.ɵɵelement(8, \"input\", 2);\n            i0.ɵɵelementEnd();\n            i0.ɵɵelementStart(9, \"label\");\n            i0.ɵɵtext(10, \"Saldo Inicial: \");\n            i0.ɵɵelement(11, \"input\", 3);\n            i0.ɵɵelementEnd();\n            i0.ɵɵelementStart(12, \"label\");\n            i0.ɵɵtext(13, \"Estado: \");\n            i0.ɵɵelement(14, \"input\", 4);\n            i0.ɵɵelementEnd();\n            i0.ɵɵelementStart(15, \"div\", 5)(16, \"label\");\n            i0.ɵɵtext(17, \"ID Cliente: \");\n            i0.ɵɵelement(18, \"input\", 6);\n            i0.ɵɵelementEnd()();\n            i0.ɵɵelementStart(19, \"button\", 7);\n            i0.ɵɵtext(20, \"Guardar\");\n            i0.ɵɵelementEnd()();\n            i0.ɵɵtext(21, \" // En cliente.component.ts, usar la misma l\\u00F3gica de Pipe para buscar\\n\");\n            i0.ɵɵelementStart(22, \"ul\");\n            i0.ɵɵtemplate(23, CuentaComponent_li_23_Template, 6, 3, \"li\", 8);\n            i0.ɵɵpipe(24, \"filtroCuenta\");\n            i0.ɵɵelementEnd();\n          }\n          if (rf & 2) {\n            i0.ɵɵadvance(2);\n            i0.ɵɵproperty(\"formGroup\", ctx.cuentaForm);\n            i0.ɵɵadvance(17);\n            i0.ɵɵproperty(\"disabled\", ctx.cuentaForm.invalid);\n            i0.ɵɵadvance(4);\n            i0.ɵɵproperty(\"ngForOf\", i0.ɵɵpipeBind2(24, 3, ctx.cuentas, ctx.filtro));\n          }\n        },\n        dependencies: [i3.NgForOf, i2.ɵNgNoValidate, i2.DefaultValueAccessor, i2.NumberValueAccessor, i2.CheckboxControlValueAccessor, i2.NgControlStatus, i2.NgControlStatusGroup, i2.FormGroupDirective, i2.FormControlName, i2.FormGroupName],\n        encapsulation: 2\n      });\n    }\n  }\n  return CuentaComponent;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}